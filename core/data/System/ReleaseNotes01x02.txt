%META:TOPICINFO{author="ProjectContributor" date="1401324697" format="1.1" version="1"}%
%META:TOPICPARENT{name="ReleaseHistory"}%
---+!! Foswiki Release 1.2 - not released yet
%RED% These are not actual release notes, but a collection of documented changes that we should not forget to mention. %ENDCOLOR%

%TOC%

---++ Foswiki - The Free and Open Source Wiki

Foswiki is an enterprise collaboration and information sharing tool targeted for professional use in many types of organizations: from small businesses to multi-nationals, from one-product open source groups, to worldwide research networks.

Foswiki is a wiki: fundamentally, a website with editable web pages. It looks like a normal web site but it encourages contributions, edits, updates, questions, and answers from its users. It's a powerful way of enabling a community to communicate asynchronously using intranet and public internet websites. Foswiki is simple to learn and use. It aims to provide a transparent way for you to publish and exchange your ideas with others over the web and eliminates the one-webmaster syndrome of outdated intranet content.

Foswiki is a structured wiki with tools that enable users without programming skills to build powerful yet simple applications to process information and support workflows. Developers can extend the functionality of Foswiki with plugins.

Foswiki is the old TWiki project under a new name. Restrictions on the use of the TWiki brand resulted in many of its developers continuing the project under the new Foswiki name. Foswiki is backwards compatible with all content from older TWiki installations. Foswiki 1.1 ships with a !TWikiCompatibilityPlugin, thus enabling most extensions made for TWiki to work under Foswiki. Since the start of the Foswiki project there have been several releases of TWiki, However there have been very few functionality changes, and the useful changes have all been tracked in Foswiki, so topics and wiki applications supported by TWiki should also work with Foswiki.

Foswiki is released under the GNU General Public License.

---++ Foswiki Releases

   * Foswiki 1.0.0, the first Foswiki was released on 09 Jan 2009.
   * Foswiki 1.0.1, 1.0.2 and 1.0.3 were released internally in the development community, but were never publicly released.
   * Foswiki 1.0.4 was built 19 Mar 2009. It is a patch release with more than 120 bug fixes relative to 1.0.0 and only very few minor enhancements.
   * Foswiki 1.0.5 was built 25 Apr 2009. It is a patch release with more than 150 bug fixes relative to 1.0.0 and a few enhancements. This patch release further enhances the robustness and the security of the Foswiki software.
   * Foswiki 1.0.6 was built 21 Jun 2009. It is a patch release with more than 200 bug fixes relative to 1.0.0 and some enhancements. This version introduces a major enhancement in security against Cross-Site Request Forgery. Further more a central translation framework got introduced which ease the translation process and enables all users to contribute to translations.
   * Foswiki 1.0.7 was built 20 Sep 2009. It is a patch release with more than 240 bug fixes relative to 1.0.0 and some enhancements. This release fixes some serious issues introduced by the CSRF fix and the redirect cache fix in 1.0.6. Major enhancement that also fixes many annoying editor bugs is the upgrade of the !Tiny MCE editor to version 3.2.2.
   * Foswiki 1.0.8 was built 29 Nov 2009. It is a patch release with more than 280 bug fixes relative to 1.0.0 and some enhancements. This release fixes a short list of quite annoying old bugs incl a bug that prevented efficient use of MailerContrib for producing newsletters. The Wysiwyg editor has been upgraded with the latest Tiny MCE editor release 3.2.7.
   * Foswiki 1.0.9 was built 17 Jan 2010. It is a patch release with more than 320 bug fixes relative to 1.0.0 and several enhancements. This release fixes many bugs in the Wysiwyg editor, bugs related to more advanced wiki applications and bugs in the Plugin API. It contains several bug fixes and enhancements related to security and spam fighting.
   * Foswiki 1.0.10 was built 08 Sep 2010 as a patch release with more than 410 bug fixes relative to 1.0.0. It is assumed to be the last 1.0.X release.
   * Foswiki 1.1.0 was built 04 Oct 2010. It is a release with more than 270 bug fixes relative to 1.0.10 and more than 680 bug fixes relative to 1.0.0. And the release adds more than 100 enhancements. Foswiki 1.1.0 introduces jQuery Javascript user interface framework, improved topic history display, new QUERY and FORMAT macros, better userinterfaces for groups, much improved WYSIWYG editor, facelift of the default skin, much improved configure tool, and many more enhancements.
   * Foswiki 1.1.1 was built 25 Oct 2010. It is a release that fixes some important bugs that were introduced in 1.1.0. It is highly recommended that all running 1.1.0 upgrade to 1.1.1.
   * %RED Foswiki 1.2 %ENDCOLOR%

---++ Pre-installed Extensions

Foswiki 1.2 is shipped with the following:

   * *Plugins:* !AutoViewTemplatePlugin, !CommentPlugin, !EditTablePlugin, !EmptyPlugin, !HistoryPlugin, !InterwikiPlugin, !JQueryPlugin, !PreferencesPlugin, !RenderListPlugin, !SlideShowPlugin, !SmiliesPlugin, !SpreadSheetPlugin, !TablePlugin, !TinyMCEPlugin, !TwistyPlugin, !WysiwygPlugin
   * *Contribs:* !CompareRevisionsAddOn, !FamFamFamContrib, !JSCalendarContrib, !MailerContrib, !TipsContrib, !TopicUserMappingContrib
   * *Skins:* !PatternSkin
   * *Compatibility support* - !TWikiCompatibilityPlugin

#Release01x02Changes
---++ Important changes since Foswiki 1.2

---+++ Perl libraries and paths

Foswiki no longer ships the required Perl CPAN libraries for use as a last
resort. If it is not possible or convenient to install perl libraries, then
install the Foswiki:Extensions.CpanContrib to get pre-built libraries
for Foswiki to use.

The setup of the perl =@INC= path has been simplified, and the =foswiki/bin/LocalLib.cfg=
setting for =$CPANBASE= has been completely eliminated.  A simple method of
adding libraries to the top of the @INC path is provided in the new example
=foswiki/bin/LocalLib.txt= shipped with foswiki.

<blockquote class="foswikiHelp">%X% *ACTION REQUIRED* If you have are upgrading an existing system and
have created a custom =foswiki/bin/LocalLib.cfg=, you should tailor a new
copy using the updated =foswiki/bin/LocalLib.cfg.txt=
</blockquote>

---+++ Authentication and Authorization

   * users can authenticate via 'TemplateLogin' with their email address

---++++ Deprecation of empty DENY rules

The intention to deprecate the use of an empty =DENYTOPIC&lt;action&gt;= rule to act as an "ALLOW all" has been completed.   This has been a
pending change predating Foswiki 1.0.0.

<blockquote class="foswikiHelp">%X% *ACTION REQUIRED* Any topics in the system that allow access by supplying an empty DENYTOPIC
rule need to be updated.  A utility has been provided to find and convert existing empty DENY rules to the new ALLOW format.
You can choose to defer this action by enabling =$Foswiki::cfg{AccessControlACL}{EnableDeprecatedEmptyDeny}= in the _Security and Authentication_
section under the _Access control_ tab.
</blockquote>

With release 1.2 of Foswiki, a new ACL rule, the asterisk,  is used as a
wildcard to match *any* user, including the guest user, !WikiGuest. Prior to
Foswiki 1.2,  a topic could be made accessable to everyone by coding
an empty =DENYTOPIC&lt;action&gt;= rule.   This rule is no longer active by
default.

A conversion tool is available in the tools directory.  =tools/convertTopicSettings.pl=  It can perform the following actions:
   * Convert empty =DENYTOPIC&lt;action&gt;= rules to the corresponding <tt>ALLOWTOPIC&lt;action&gt;= *</tt>
   * Optionally convert inline ACLs into META settings.   This is recommended for Foswiki 1.2
   * Optionally convert __all__ inline settings into META settings.

<verbatim>
# perl -I bin tools/convertTopicSettings -fixdeny

# SYNOPSIS
#    convertTopicSettings [-update] [-fixdeny] [-convert] [-all] [-verbose]
#    [-debug] [WEB ...]
#
# DESCRIPTION
#
#    -update: topics will be updated.  Without the -update
#    option, candidate topic changes will be reported but will not be written.
#
#    -fixdeny: Removes empty DENYTOPIC rules, replacing them with ALLOWTOPIC
#    wildcard
#
#    -convert: Convert Preference into META settings.  Inline ACLs are
#    removed.
#
#    -all:     Convert all settings from inline sets to meta settings.
#    Default is to
#              process ACL settings
#
#    -verbose: Report details on what is changed.
#
#    -debug:   Print additional detailed information
#
#    If you specify web names, only those specified are processed. Otherwise,
#    all writable webs are processed.
#
# WARNING
#    This script uses the Foswiki APIs.  It MUST be run as the web server user
#    (apache, or www-data depending on the distribution).  If run as root, it
#    will make the foswiki log unusable by the foswiki web server.
#
</verbatim>

---++++ REST Script default security has changed:

Foswiki 1.2 has removed the =rest= script from the list of ={AuthScripts}=.  Instead of providing blanket
security for =rest=, each handler is now responsible to set its individual requirements for 3 options:
<i>authentication</i>, <i>validation</i> and <i>http_allow</i>ed methods (POST vs. GET).  The defaults for these
3 options have been changed to default to be secure, and handlers can exempt these checks based upon their specific requirements.

A new configuration option has been added to the _Security and Authentication_ section, _Login_ tab: ={LegacyRESTSecurity}=. Enable this setting to restore the old insecure
defaults for REST handlers.  If enabled, and =rest= is not listed in ={AuthScripts}=, a warning will be displayed.

---++++ New Pluggable Access Control implementations.

Foswiki has made the Access Control implementation "Pluggable".  New ACL
methods may be more easily implemented in the future.  The default method is
=$Foswiki::cfg{AccessControl} = 'Foswiki::Access::TopicACLAccess';=.

Two additional methods are now included which may be of help to the
Administrator:

   $ =AdminOnlyAccess=: When selected, all requests for access are denied except when requested by users in the AdminGroup.
   $ =TopicACLReadOnlyAccess=: The topic ACLs are applied as usual, but any access other than VIEW access is denied, except for users in the AdminGroup

<blockquote class="foswikiHelp">%X% *Caution:* These controls are enforced at
the ACL Level.  Extensions have the ability to ignore access controls.  If an
extension fails to check for access permission, then these new methods will
not block access.
</blockquote>

---+++ Improved CGI Session security

---++++ Session IDs

In Foswiki 1.2, sessions ID's will be changed whenever the user identity changes.  This improves the resistance to certain session hijack attacks.
This is not believed to have any negative impact, however there is a race condition if the user uses multiple browser tabs, and authenticates in one
tab while the other tabs are interacting with the server (for ex. a long running attachment upload in one tab, followed by a sudo login in another tab.
The session ID in use for the upload will be deleted because of the sudo login and results are unpredictable.

This change is important for security purposes and cannot be disabled.

---++++ Sessions and Roaming or Mobile Users

In Foswiki 1.2, =$Foswiki::cfg{Sessions}{UseIPMatching}= has been enabled by default.  This change can improve security by
reducing the exposure to certain session hijack attacks.  However it can be disruptive to mobile users.  It is also of limited use when
users access the wiki through a proxy or other devices that might cause multiple users to share the same IP address.

With =UseIPMatching= enabled,  =CGI::Session= code will compare the current user's IP Address to the address that was used when the session was initially created.
If the IP address has changed, then the session is invalidated and the user is required to re-authenticate.
There is further information about this option in the [[%SCRIPTURLPATH{"configure"}%#SecurityAndAuthentication][configure]] interface.

---++++ Optional Sessions for Guest users

_EXPERIMENTAL_ feature: In %WIKITOOLNAME% version 1.2, sessions can be suppressed for guest users.   This is believed safe if guests have no ability to update.
However if guests are permitted to update, such as by using the CommentPlugin, or if any wiki applications make use Session Variables, then guest sessions should be enabled. See the
[[%SCRIPTURLPATH{"configure"}%#SecurityAndAuthentication][configure]] interface for more information.

---+++ Configure has been given a major restructuring

   * Configure now requires JavaScript.
      * Configuration parameters are Checked and saved through ajax.
      * Configure only transmits changed settings, greatly reducing the required bandwith and improving performance.
   * Configure has been changed to behave more like a classic "shopping cart"
      * Changes are kept in your session, you can leave and return without loosing pending changes.
      * Pending changes can be checked, before being saved.
      * A log message describing the cnanges can be annotated during save.
   * Settings are checked through several mechanisms
      * Traditional: all settings are checked when configure is intially loaded.
      * On demand: A manual "Check this setting" button is provided for some resource intensive checkers. (ex. File permission checking)
      * Automatic: Some fields are auto-checked as soon as you tab away.  (Numbers, Regular expressions)
      * New "Configuration Audit" centrailzes several overall system health check buttons, and allows all checkers to be run again on demand.
      * The error summary counts are now buttons, which pop up a list of the errors
   * Performance
      * Javascript minimzies the  data transmitted to/from the client.  The entire configuration is not sent for each transaction.
      * Configure now supports etags and will return option 302 for resources that are cached by the browser.

---++++ Changes to confgigure Authentication

   * Configure requires a password to access the configuration.
   * Configure now trusts the Session login.   If your web server is configured to authenticate the user, configure will not prompt for a password
   * The "admin" superuser password is now optional:
      * If set, configure requires that it be entered to save
      * If not set, configure depends solely upon the session authentication
      * By not setting, or by clearing the admin password, sites can disable the "sudo" admin login, eliminating sharing of admin passwords.

---+++ Query Search
The undocumented shortcut notation to reference to a form name is no longer available. Previously you could write:
<verbatim>
%SEARCH{
	type="query"
	"BlogPostForm"
}%
</verbatim>
Because this could lead to undeterministic behaviour, the syntax is now more controlled. You now have to refer to the form name:
<verbatim>
%SEARCH{
	type="query"
	"form.name='BlogPostForm'"
}%
</verbatim>

---+++ Major change to ICON macro and templates
Foswiki:Development.HtmlAttributesShouldUseSingleQuotes has changed the ICON
macro to generate singe quotes by default.  This has no impact unless the
%ICON macro is being expanded inside a single-quote delimited macro.

In order to simplify migration, a new =quote== parameter has been added to the
ICON macro. =%<nop>ICON{"pdf" quote="\""}%= generates the html using double
quotes delimiters.  See System.VarICON for more details.
.
---++ Foswiki Release 1.2 Details

---+++ Fixes

<noautolink>
| [[%BUGS%/ItemX][ItemX]] | description |
</noautolink>


---++ Enhancements

<noautolink>
| [[%BUGS%/ItemX][ItemX]] | description |
</noautolink>

---
 <!-- Note: Do not use Bugs: interwiki links because interwiki rule might not be defined
   * Set BUGS = http://foswiki.org/Tasks
-->

*Related Topic:* ReleaseHistory
